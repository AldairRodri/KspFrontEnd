{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nlet UpdateEmpleadosComponent = class UpdateEmpleadosComponent {\n  constructor(http, route) {\n    this.http = http;\n    this.route = route;\n    this.resultados = [];\n    this.editarForm = new FormGroup({\n      NombreEmpleado: new FormControl(''),\n      ApellidoPaternoEmpleado: new FormControl(''),\n      ApellidoMaternoEmpleado: new FormControl(''),\n      PuestoTrabajo: new FormControl(''),\n      Salario: new FormControl(''),\n      Estatus: new FormControl(''),\n      FechaContratacion: new FormControl('')\n    });\n    this.id = this.route.snapshot.params['id'];\n    this.obtenerEmpleadoId();\n  }\n  obtenerEmpleadoId() {\n    this.http.get(`https://localhost:7054/api/Empleados/Obtener?id=${this.id}`).subscribe(res => {\n      this.resultados = res;\n    }\n    // 'NombreEmpleado' : this.NombreEmpleado,\n    // 'ApellidoPaternoEmpleado' : this.ApellidoPaternoEmpleado,\n    // 'ApellidoMaternoEmpleado' : this.ApellidoMaternoEmpleado,\n    // 'PuestoTrabajo' : this.PuestoTrabajo,\n    // 'Salario': this.Salario,\n    // 'Estatus': this.Estatus,\n    // 'FechaContratacion' : this.FechaContratacion\n    );\n  }\n\n  GuardarDatos(id, FotoEmpleado, NombreEmpleado, ApellidoPaternoEmpleado, ApellidoMaternoEmpleado, PuestoTrabajo, Salario, Estatus, FechaContratacion) {\n    const datos = {\n      id: this.id,\n      fotoEmpleado: this.FotoEmpleado,\n      NombreEmpleado: this.NombreEmpleado,\n      ApellidoPaternoEmpleado: this.ApellidoPaternoEmpleado,\n      ApellidoMaternoEmpleado: this.ApellidoMaternoEmpleado,\n      PuestoTrabajo: this.PuestoTrabajo,\n      salario: this.Salario,\n      Estatus: true,\n      FechaContratacion: this.FechaContratacion\n    };\n    let url = \"https://localhost:7054/api/Empleados/Add\";\n    this.http.post(url, datos).toPromise().then(data => {\n      console.log(datos);\n      console.log(data);\n    });\n  }\n};\nUpdateEmpleadosComponent = __decorate([Component({\n  selector: 'app-update-empleados',\n  templateUrl: './update-empleados.component.html',\n  styleUrls: ['./update-empleados.component.css']\n})], UpdateEmpleadosComponent);\nexport { UpdateEmpleadosComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","UpdateEmpleadosComponent","constructor","http","route","resultados","editarForm","NombreEmpleado","ApellidoPaternoEmpleado","ApellidoMaternoEmpleado","PuestoTrabajo","Salario","Estatus","FechaContratacion","id","snapshot","params","obtenerEmpleadoId","get","subscribe","res","GuardarDatos","FotoEmpleado","datos","fotoEmpleado","salario","url","post","toPromise","then","data","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ALDAIR\\OneDrive\\Documents\\Visual Studio 2022\\KSP\\Front_KSP\\src\\app\\Empleados\\update-empleados\\update-empleados.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroup } from '@angular/forms';\n@Component({\n  selector: 'app-update-empleados',\n  templateUrl: './update-empleados.component.html',\n  styleUrls: ['./update-empleados.component.css']\n})\nexport class UpdateEmpleadosComponent {\n  \n  id!: any\n  FotoEmpleado!:any\n  NombreEmpleado!:any\n  ApellidoPaternoEmpleado!:any\n  ApellidoMaternoEmpleado!:any\n  PuestoTrabajo!:any\n  Salario!:any\n  Estatus!:any\n  FechaContratacion!:any\n  \n\n\n  public resultados:any[]=[]\nconstructor(private http:HttpClient, private route:ActivatedRoute){\n  this.id=this.route.snapshot.params['id'];\n  this.obtenerEmpleadoId();\n\n  \n}\n\neditarForm = new FormGroup({\n  NombreEmpleado : new FormControl(''),\n  ApellidoPaternoEmpleado : new FormControl(''),\n  ApellidoMaternoEmpleado : new FormControl(''),\n  PuestoTrabajo : new FormControl(''),\n  Salario : new FormControl(''),\n  Estatus : new FormControl(''),\n  FechaContratacion : new FormControl('')\n\n\n});\n\n\n\n\n\n  obtenerEmpleadoId(){\n    this.http.get(`https://localhost:7054/api/Empleados/Obtener?id=${this.id}`)\n    .subscribe((res:any)=>{this.resultados=res}\n    // 'NombreEmpleado' : this.NombreEmpleado,\n    // 'ApellidoPaternoEmpleado' : this.ApellidoPaternoEmpleado,\n    // 'ApellidoMaternoEmpleado' : this.ApellidoMaternoEmpleado,\n    // 'PuestoTrabajo' : this.PuestoTrabajo,\n    // 'Salario': this.Salario,\n    // 'Estatus': this.Estatus,\n    // 'FechaContratacion' : this.FechaContratacion\n    \n    )\n  }\n\n\n  GuardarDatos( id:any, FotoEmpleado:any,NombreEmpleado:any,ApellidoPaternoEmpleado:any,ApellidoMaternoEmpleado:any,\n    PuestoTrabajo:any,Salario:any,Estatus:any,FechaContratacion:any){\n\n    const datos ={\n      id:this.id,\n      fotoEmpleado:this.FotoEmpleado,\n      NombreEmpleado:this.NombreEmpleado,\n      ApellidoPaternoEmpleado:this.ApellidoPaternoEmpleado,\n      ApellidoMaternoEmpleado:this.ApellidoMaternoEmpleado,\n      PuestoTrabajo:this.PuestoTrabajo,\n      salario:this.Salario,\n      Estatus:true,\n      FechaContratacion:this.FechaContratacion\n    }\n\n    let url=\"https://localhost:7054/api/Empleados/Add\"\n    this.http.post(url,datos).toPromise().then(data=>{\n      console.log(datos)\n      console.log(data);\n    })\n  }\n\n  \n\n \n\n\n\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAGzC,SAASC,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AAMvD,IAAaC,wBAAwB,GAArC,MAAaA,wBAAwB;EAerCC,YAAoBC,IAAe,EAAUC,KAAoB;IAA7C,KAAAD,IAAI,GAAJA,IAAI;IAAqB,KAAAC,KAAK,GAALA,KAAK;IADzC,KAAAC,UAAU,GAAO,EAAE;IAQ5B,KAAAC,UAAU,GAAG,IAAIN,SAAS,CAAC;MACzBO,cAAc,EAAG,IAAIR,WAAW,CAAC,EAAE,CAAC;MACpCS,uBAAuB,EAAG,IAAIT,WAAW,CAAC,EAAE,CAAC;MAC7CU,uBAAuB,EAAG,IAAIV,WAAW,CAAC,EAAE,CAAC;MAC7CW,aAAa,EAAG,IAAIX,WAAW,CAAC,EAAE,CAAC;MACnCY,OAAO,EAAG,IAAIZ,WAAW,CAAC,EAAE,CAAC;MAC7Ba,OAAO,EAAG,IAAIb,WAAW,CAAC,EAAE,CAAC;MAC7Bc,iBAAiB,EAAG,IAAId,WAAW,CAAC,EAAE;KAGvC,CAAC;IAhBA,IAAI,CAACe,EAAE,GAAC,IAAI,CAACV,KAAK,CAACW,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IACxC,IAAI,CAACC,iBAAiB,EAAE;EAG1B;EAkBEA,iBAAiBA,CAAA;IACf,IAAI,CAACd,IAAI,CAACe,GAAG,CAAC,mDAAmD,IAAI,CAACJ,EAAE,EAAE,CAAC,CAC1EK,SAAS,CAAEC,GAAO,IAAG;MAAC,IAAI,CAACf,UAAU,GAACe,GAAG;IAAA;IAC1C;IACA;IACA;IACA;IACA;IACA;IACA;KAEC;EACH;;EAGAC,YAAYA,CAAEP,EAAM,EAAEQ,YAAgB,EAACf,cAAkB,EAACC,uBAA2B,EAACC,uBAA2B,EAC/GC,aAAiB,EAACC,OAAW,EAACC,OAAW,EAACC,iBAAqB;IAE/D,MAAMU,KAAK,GAAE;MACXT,EAAE,EAAC,IAAI,CAACA,EAAE;MACVU,YAAY,EAAC,IAAI,CAACF,YAAY;MAC9Bf,cAAc,EAAC,IAAI,CAACA,cAAc;MAClCC,uBAAuB,EAAC,IAAI,CAACA,uBAAuB;MACpDC,uBAAuB,EAAC,IAAI,CAACA,uBAAuB;MACpDC,aAAa,EAAC,IAAI,CAACA,aAAa;MAChCe,OAAO,EAAC,IAAI,CAACd,OAAO;MACpBC,OAAO,EAAC,IAAI;MACZC,iBAAiB,EAAC,IAAI,CAACA;KACxB;IAED,IAAIa,GAAG,GAAC,0CAA0C;IAClD,IAAI,CAACvB,IAAI,CAACwB,IAAI,CAACD,GAAG,EAACH,KAAK,CAAC,CAACK,SAAS,EAAE,CAACC,IAAI,CAACC,IAAI,IAAE;MAC/CC,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;MAClBQ,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ;CAUD;AAnFY7B,wBAAwB,GAAAgC,UAAA,EALpCnC,SAAS,CAAC;EACToC,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,C,EACWnC,wBAAwB,CAmFpC;SAnFYA,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}