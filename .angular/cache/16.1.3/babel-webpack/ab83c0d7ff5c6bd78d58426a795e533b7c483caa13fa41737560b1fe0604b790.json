{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet NewEmpleadoComponent = class NewEmpleadoComponent {\n  constructor(http, sanitizer) {\n    this.http = http;\n    this.sanitizer = sanitizer;\n  }\n  sendEmpleado() {\n    const datos = {\n      fotoEmpleado: this.FotoEmpleado,\n      NombreEmpleado: this.NombreEmpleado,\n      ApellidoPaternoEmpleado: this.ApellidoPaternoEmpleado,\n      ApellidoMaternoEmpleado: this.ApellidoMaternoEmpleado,\n      PuestoTrabajo: this.PuestoTrabajo,\n      salario: this.Salario,\n      Estatus: true,\n      FechaContratacion: this.FechaContratacion\n    };\n    let url = \"https://localhost:7054/api/Empleados/Add\";\n    this.http.post(url, datos).toPromise().then(data => {\n      console.log(datos);\n      console.log(data);\n    });\n  }\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = this.handleReaderLoaded.bind(this);\n      reader.readAsBinaryString(file);\n    }\n  }\n  handleReaderLoaded(readerEvent) {\n    const binaryString = readerEvent.target.result;\n    const base64textString = btoa(binaryString);\n    console.log(base64textString);\n    this.FotoEmpleado = base64textString;\n  }\n};\nNewEmpleadoComponent = __decorate([Component({\n  selector: 'app-new-empleado',\n  templateUrl: './new-empleado.component.html',\n  styleUrls: ['./new-empleado.component.css']\n})], NewEmpleadoComponent);\nexport { NewEmpleadoComponent };","map":{"version":3,"names":["Component","NewEmpleadoComponent","constructor","http","sanitizer","sendEmpleado","datos","fotoEmpleado","FotoEmpleado","NombreEmpleado","ApellidoPaternoEmpleado","ApellidoMaternoEmpleado","PuestoTrabajo","salario","Salario","Estatus","FechaContratacion","url","post","toPromise","then","data","console","log","onFileSelected","event","file","target","files","reader","FileReader","onload","handleReaderLoaded","bind","readAsBinaryString","readerEvent","binaryString","result","base64textString","btoa","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ALDAIR\\OneDrive\\Documents\\Visual Studio 2022\\KSP\\Front_KSP\\src\\app\\Empleados\\new-empleado\\new-empleado.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-new-empleado',\n  templateUrl: './new-empleado.component.html',\n  styleUrls: ['./new-empleado.component.css']\n})\nexport class NewEmpleadoComponent {\n  NombreEmpleado!:any\n  ApellidoPaternoEmpleado!:any\n  ApellidoMaternoEmpleado!:any\n  PuestoTrabajo!:any\n  Salario!:any\n  Estatus!:any\n  FechaContratacion!:any\n  FotoEmpleado!:any\n\nconstructor(private http:HttpClient, private sanitizer: DomSanitizer){}\n\n  sendEmpleado(){\n\n    const datos ={\n      fotoEmpleado:this.FotoEmpleado,\n      NombreEmpleado:this.NombreEmpleado,\n      ApellidoPaternoEmpleado:this.ApellidoPaternoEmpleado,\n      ApellidoMaternoEmpleado:this.ApellidoMaternoEmpleado,\n      PuestoTrabajo:this.PuestoTrabajo,\n      salario:this.Salario,\n      Estatus:true,\n      FechaContratacion:this.FechaContratacion\n\n\n\n    }\n    let url=\"https://localhost:7054/api/Empleados/Add\"\n    this.http.post(url,datos).toPromise().then(data=>{\n      console.log(datos)\n      console.log(data);\n    })\n  }\n\n\n\n\n  \n  onFileSelected(event: any) {\n    const file: File = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = this.handleReaderLoaded.bind(this);\n      reader.readAsBinaryString(file);\n    }\n  }\n  \n  handleReaderLoaded(readerEvent: any) {\n    const binaryString = readerEvent.target.result;\n    const base64textString = btoa(binaryString);\n    console.log(base64textString);\n    this.FotoEmpleado=base64textString;\n  }\n\n\n\n\n\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASzC,IAAaC,oBAAoB,GAAjC,MAAaA,oBAAoB;EAUjCC,YAAoBC,IAAe,EAAUC,SAAuB;IAAhD,KAAAD,IAAI,GAAJA,IAAI;IAAqB,KAAAC,SAAS,GAATA,SAAS;EAAgB;EAEpEC,YAAYA,CAAA;IAEV,MAAMC,KAAK,GAAE;MACXC,YAAY,EAAC,IAAI,CAACC,YAAY;MAC9BC,cAAc,EAAC,IAAI,CAACA,cAAc;MAClCC,uBAAuB,EAAC,IAAI,CAACA,uBAAuB;MACpDC,uBAAuB,EAAC,IAAI,CAACA,uBAAuB;MACpDC,aAAa,EAAC,IAAI,CAACA,aAAa;MAChCC,OAAO,EAAC,IAAI,CAACC,OAAO;MACpBC,OAAO,EAAC,IAAI;MACZC,iBAAiB,EAAC,IAAI,CAACA;KAIxB;IACD,IAAIC,GAAG,GAAC,0CAA0C;IAClD,IAAI,CAACd,IAAI,CAACe,IAAI,CAACD,GAAG,EAACX,KAAK,CAAC,CAACa,SAAS,EAAE,CAACC,IAAI,CAACC,IAAI,IAAE;MAC/CC,OAAO,CAACC,GAAG,CAACjB,KAAK,CAAC;MAClBgB,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ;EAMAG,cAAcA,CAACC,KAAU;IACvB,MAAMC,IAAI,GAASD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACxC,IAAIF,IAAI,EAAE;MACR,MAAMG,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAG,IAAI,CAACC,kBAAkB,CAACC,IAAI,CAAC,IAAI,CAAC;MAClDJ,MAAM,CAACK,kBAAkB,CAACR,IAAI,CAAC;;EAEnC;EAEAM,kBAAkBA,CAACG,WAAgB;IACjC,MAAMC,YAAY,GAAGD,WAAW,CAACR,MAAM,CAACU,MAAM;IAC9C,MAAMC,gBAAgB,GAAGC,IAAI,CAACH,YAAY,CAAC;IAC3Cd,OAAO,CAACC,GAAG,CAACe,gBAAgB,CAAC;IAC7B,IAAI,CAAC9B,YAAY,GAAC8B,gBAAgB;EACpC;CAQD;AA5DYrC,oBAAoB,GAAAuC,UAAA,EALhCxC,SAAS,CAAC;EACTyC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACW1C,oBAAoB,CA4DhC;SA5DYA,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}